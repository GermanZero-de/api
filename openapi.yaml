openapi: 3.0.0
info:
  title: germanzero
  version: '1.1'
  license:
    name: MIT
  description: An API to access GermanZero
servers:
  - url: 'http://localhost:3000'
    description: 'Local development'
  - url: 'https://api.germanzero.de'
    description: 'Live server'

paths:
  /subscriptions:
    post:
      summary: Subscribe to newsletter
      description: Creates a new GermanZero contact and sends an email to the given address with a confirmation link
      responses:
        '202':
          description: Contact is created but must be confirmed
        '409':
          description: A contact with the given email address already exist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
            examples:
              example:
                value:
                  firstName: John
                  lastName: Doe
                  email: johndoe@example.com

  /members:
    post:
      summary: Join GermanZero as a member
      description: Creates a new GermanZero contact and sends an email to the given address with a confirmation link
      responses:
        '202':
          description: Contact is created but must be confirmed
        '409':
          description: A contact with the given email address already exist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
            examples:
              example:
                value:
                  firstName: John
                  lastName: Doe
                  email: johndoe@example.com

  /contacts/:contactId/confirmations/:code:
    get:
      summary: Marks the email address of the contact as confirmed
      description: Contacts are firstly created opted out from mailings to comply with GDPR. A first email is sent then, containing a confirmation link which is this route.
      parameters:
        - in: path
          name: contactId
          required: true
          schema:
            type: integer
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Contact is confirmed, redirect to /contact-confirmed page. In case of an invalid code, the contact is not confirmed and the redirection goes to /invalid-confirmation page

  /contacts/:id/unsubscribe/:code:
    get:
      summary: Unsubscribe a contact
      description: This is the link generated in e-mail footers to unsubscribe. It contains a code to prevent misuse.
      parameters:
        - in: path
          name: contactId
          required: true
          schema:
            type: integer
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Contact is unsubscribed, redirect to /unsubscribe-confirmed page. In case of an invalid code, the contact is not unsubscribed and the redirection goes to /invalid-unsubscribe page

  /contacts/mc-webhooks/:code:
    post:
      summary: Webhook endpoint for information from MailChimp. Currently only 'unsubscribe' events are supported.
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      requestBody:
        description: Payload from MailChimp
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailChimpUnsubscribeEvent'
      responses:
        200:
          description: Information accepted
        403:
          description: An invalid code was sent
        404:
          description: Contact not found

  /session:
    post:
      description: Create a new session by logging in with userid and password
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                userid:
                  type: string
                password:
                  type: string
              required:
                - userid
                - password
      responses:
        200:
          description: Login successful
        403:
          description: Login failed

  /users:
    post:
      summary: Create a new GermanZero tools user
      responses:
        '201':
          description: Created
        '409':
          description: Conflict
      description: Create a new GermanZero tools user. This can only be done by someone who is already a tool user and therefore has a bearer token from creating a session
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/user'
                - type: object
                  properties:
                    password:
                      type: string
                      description: Initial password
            examples:
              example:
                value:
                  firstName: John
                  lastName: Doe
                  email: johndoe@example.com
                  password: my-great-secret

components:
  schemas:
    contact:
      title: contact
      type: object
      description: Representation of a GermanZero contact
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          format: phone
        gender:
          enum:
            - female
            - male
            - other
        title:
          enum:
            - Dr.
            - Prof.
        streetAddress:
          type: string
        postalCode:
          type: string
        city:
          type: string
        newsletter:
          type: boolean
          description: should be non-empty to register new members for the newsletter as well. This parameter is implicitly assumed on /subscriptions, because it is the reason to subscribe.

    user:
      title: user
      type: object
      description: Representation of a GermanZero user record
      properties:
        id:
          type: string
          description: Automatic generated identifier for user
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
      required:
        - firstName
        - lastName
        - email
      x-examples:
        example:
          value:
            firstName: John
            lastName: Doe
            email: johndoe@example.com

    MailChimpUnsubscribeEvent:
      title: Payload of MailChimp unsubscribe event
      type: object
      properties:
        type:
          enum:
            - unsubscribe
        data[email]:
          type: string

  securitySchemes:
    APIKey:
      name: API Key
      type: apiKey
      in: header
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
